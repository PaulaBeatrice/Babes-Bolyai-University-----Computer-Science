     1                                  ; Se citeste de la tastatura un nume de fisier, un caracter special s (orice caracter in afara de litere si cifre) si un numar n reprezentat pe octet.
     2                                  ; Fisierul contine cuvinte separate prin spatiu. Sa se scrie in fisierul output.txt ultimele n caractere din fiecare cuvant.
     3                                  ; (Daca numarul de caractere al cuvantului este mai mic decat n, cuvantul se va prefixa cu caracterul special s).
     4                                  
     5                                  ;Exemplu:
     6                                  ;nume fisier:input.txt
     7                                  ;continut fisier: mere pere banane mandarine
     8                                  ;s: +
     9                                  ;n: 6
    10                                  ;output.txt: ++mere ++pere banana darine
    11                                  
    12                                  bits 32
    13                                  
    14                                  global start        
    15                                  
    16                                  
    17                                  extern exit, printf, fprintf, scanf, fscanf, fopen, fclose              
    18                                  import exit msvcrt.dll    
    19                                  import printf msvcrt.dll  
    20                                  import fprintf msvcrt.dll  
    21                                  import scanf msvcrt.dll  
    22                                  import fscanf msvcrt.dll  
    23                                  import fopen msvcrt.dll 
    24                                  import fclose msvcrt.dll 
    25                                  
    26                                  segment data use32 class=data
    27 00000000 00000000                    nume_fisier dd 0 
    28 00000004 2573000000000000            format_fisier dd "%s", 0
    29 0000000C FFFFFFFF                    descriptor_1 dd -1
    30 00000010 7200                        mod_acces db "r", 0
    31                                      
    32 00000012 00                          caracter_special db 0
    33 00000013 2573000000000000            format_caracter dd "%s", 0
    34                                      
    35 0000001B 00                          numar db 0
    36 0000001C 2564000000000000            format_nr dd "%d", 0
    37                                      
    38 00000024 6F75747075742E7478-         fisier db "output.txt", 0
    38 0000002D 7400               
    39 0000002F FFFFFFFF                    descriptor_2 dd -1
    40 00000033 7700                        mod_acces_2 db "w", 0
    41 00000035 25730A00                    format_afisare db "%s", 10, 0
    42                                      
    43 00000039 00<rept>                    cuvant times 32 db 0
    44 00000059 257300                      format_cuvant db "%s", 0
    45 0000005C 00<rept>                    sir times 100 db 0
    46                                  
    47                                  segment code use32 class=code
    48                                      start:
    49                                          ;citire si deschide fisier
    50 00000000 68[00000000]                    push dword nume_fisier
    51 00000005 68[04000000]                    push dword format_fisier
    52 0000000A FF15[00000000]                  call[scanf]
    53 00000010 83C408                          add esp, 4 * 2
    54                                          
    55 00000013 68[10000000]                    push dword mod_acces
    56 00000018 68[00000000]                    push dword nume_fisier
    57 0000001D FF15[00000000]                  call[fopen]
    58 00000023 83C408                          add esp, 4 * 2
    59                                          
    60 00000026 A3[0C000000]                    mov [descriptor_1], eax
    61                                          
    62 0000002B 83F800                          cmp eax, 0
    63 0000002E 0F843C010000                    je final
    64                                          
    65                                          ;citire caracter special
    66 00000034 68[12000000]                    push dword caracter_special
    67 00000039 68[13000000]                    push dword format_caracter
    68 0000003E FF15[00000000]                  call [scanf]
    69 00000044 83C408                          add esp, 4 * 2
    70                                          
    71                                          ;citire numar
    72 00000047 68[1B000000]                    push dword numar
    73 0000004C 68[1C000000]                    push dword format_nr
    74 00000051 FF15[00000000]                  call[scanf]
    75 00000057 83C408                          add esp, 4 * 2
    76                                          
    77                                          ;deschidere fisier_af
    78 0000005A 68[33000000]                    push dword mod_acces_2
    79 0000005F 68[24000000]                    push dword fisier
    80 00000064 FF15[00000000]                  call[fopen]
    81 0000006A 83C408                          add esp, 4 * 2
    82                                          
    83 0000006D A3[2F000000]                    mov [descriptor_2], eax
    84                                          
    85 00000072 83F800                          cmp eax, 0
    86 00000075 0F84F5000000                    je final
    87                                          
    88                                          citire_cuvant:
    89                                              ;citim cuvantul, si punem in fisier prefixul sau
    90 0000007B 68[39000000]                        push dword cuvant
    91 00000080 68[59000000]                        push dword format_cuvant
    92 00000085 FF35[0C000000]                      push dword [descriptor_1]
    93 0000008B FF15[00000000]                      call[fscanf]
    94                                              
    95 00000091 85C0                                test eax, eax
    96 00000093 0F88B9000000                        js gata
    97                                              
    98 00000099 BE[39000000]                        mov esi, cuvant
    99                                              
   100 0000009E BB00000000                          mov ebx, 0; numaram literele cuvantului citit
   101                                              
   102                                              numarare:
   103 000000A3 AC                                      lodsb
   104 000000A4 3C00                                    cmp al, 0
   105 000000A6 7403                                    je gata_numarare
   106 000000A8 43                                      inc ebx
   107 000000A9 EBF8                                    jmp numarare
   108                                              gata_numarare:
   109                                              
   110 000000AB 3B1D[1B000000]                      cmp ebx, [numar]
   111 000000B1 735C                                jae afis_cuv
   112                                              ;afisam caracter + cuvant
   113 000000B3 8B0D[1B000000]                      mov ecx, [numar]
   114 000000B9 29D9                                sub ecx, ebx
   115 000000BB C605[5C000000]00                    mov byte[sir], 0
   116 000000C2 BA00000000                          mov edx, 0
   117 000000C7 A0[12000000]                        mov al, byte[caracter_special]
   118                                              
   119                                              repeta:
   120 000000CC 8882[5C000000]                          mov byte[sir + edx], al
   121 000000D2 42                                      inc edx
   122 000000D3 E2F7                                    loop repeta
   123                                                  
   124 000000D5 89D9                                mov ecx, ebx
   125 000000D7 29DE                                sub esi, ebx
   126 000000D9 83EE01                              sub esi, 1
   127 000000DC BF00000000                          mov edi, 0
   128                                              repeta_:
   129                                                  ;stosb
   130 000000E1 8A043E                                  mov al, [esi + edi]
   131 000000E4 8882[5C000000]                          mov byte[sir+edx], al
   132 000000EA 42                                      inc edx
   133 000000EB 47                                      inc edi
   134 000000EC E2F3                                    loop repeta_
   135 000000EE 89B2[5D000000]                      mov [sir+edx+1], esi
   136                                                      
   137                                              ;mov [cuvant], edi
   138                                                              
   139 000000F4 68[5C000000]                        push dword sir
   140 000000F9 68[35000000]                        push dword format_afisare
   141 000000FE FF35[2F000000]                      push dword [descriptor_2]
   142 00000104 FF15[00000000]                      call[fprintf]
   143 0000010A 83C40C                              add esp, 4 *3
   144                                              
   145 0000010D EB3E                                jmp aici
   146                                              afis_cuv:
   147 0000010F 2B35[1B000000]                          sub esi, [numar]
   148 00000115 83EE01                                  sub esi, 1
   149 00000118 C605[5C000000]00                        mov byte[sir], 0
   150 0000011F 8B0D[1B000000]                          mov ecx, [numar]
   151 00000125 BA00000000                              mov edx, 0
   152                                                  repeta_2:
   153 0000012A AC                                          lodsb
   154 0000012B 8882[5C000000]                              mov byte[sir + edx], al
   155 00000131 42                                          inc edx
   156 00000132 E2F6                                        loop repeta_2
   157                                                  
   158                                                  ;mov [cuvant], edi
   159                                                  
   160 00000134 68[5C000000]                            push dword sir
   161 00000139 68[35000000]                            push dword format_afisare
   162 0000013E FF35[2F000000]                          push dword [descriptor_2]
   163 00000144 FF15[00000000]                          call[fprintf]
   164 0000014A 83C40C                                  add esp, 4 *3
   165                                              
   166                                              aici:
   167 0000014D E929FFFFFF                          jmp citire_cuvant
   168                                          gata:
   169                                          
   170                                          ;inchidem fisierele
   171 00000152 FF35[0C000000]                  push dword [descriptor_1]
   172 00000158 FF15[00000000]                  call[fclose]
   173 0000015E 83C404                          add esp, 4
   174                                          
   175 00000161 FF35[2F000000]                  push dword[descriptor_2]
   176 00000167 FF15[00000000]                  call[fclose]
   177 0000016D 83C404                          add esp, 4
   178                                          
   179                                          final:
   180 00000170 6A00                            push    dword 0      
   181 00000172 FF15[00000000]                  call    [exit]       
