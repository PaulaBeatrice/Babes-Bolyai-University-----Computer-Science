     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  ;Este dat fisierul pruefung.txt. Fisierul contine un text de maxim 220 semne-litere mici,mari spatii libere si puncte.
     3                                  ; Afisati pe ecran, pe randuri diferite, cuv cu un numar impar de litere.
     4                                  ; interschimband semnul din mijloc cu un spatiu liber.
     5                                  
     6                                  global start        
     7                                  
     8                                  
     9                                  extern exit,fopen,fscanf,fclose,printf              
    10                                  import exit msvcrt.dll   
    11                                  import fopen msvcrt.dll
    12                                  import fclose msvcrt.dll
    13                                  import printf msvcrt.dll
    14                                  import fscanf msvcrt.dll
    15                                  
    16                                  segment data use32 class=data
    17 00000000 7072756566756E672E-         nume_fisier db "pruefung.txt",0
    17 00000009 74787400           
    18 0000000D 7200                        mod_acces db "r",0
    19 0000000F FFFFFFFF                    descriptor dd -1
    20 00000013 00<rept>                    cuvant times 32 db 0
    21 00000033 257300                      format db "%s",0
    22 00000036 25732000                    format_af db "%s ",0
    23 0000003A 00000000                    cnt dd 0
    24 0000003E 0A0D00                      newline db 10,13,0
    25                                   
    26                                  segment code use32 class=code
    27                                      start:
    28 00000000 68[0D000000]                    push dword mod_acces
    29 00000005 68[00000000]                    push dword nume_fisier
    30 0000000A FF15[00000000]                  call [fopen]
    31 00000010 83C408                          add esp,4*2
    32                                          
    33 00000013 A3[0F000000]                    mov [descriptor],eax
    34                                          
    35 00000018 83F800                          cmp eax,0
    36 0000001B 0F849D000000                    je final
    37                                          
    38                                          repeta:
    39 00000021 60                                  pushad
    40 00000022 68[13000000]                        push dword cuvant
    41 00000027 68[33000000]                        push format
    42 0000002C FF35[0F000000]                      push dword [descriptor]
    43 00000032 FF15[00000000]                      call [fscanf]
    44 00000038 83C40C                              add esp,4*3
    45                                              
    46 0000003B 85C0                                test eax,eax
    47 0000003D 7870                                js afara
    48                                              
    49 0000003F C705[3A000000]0000-                 mov dword[cnt],0
    49 00000047 0000               
    50                                              
    51 00000049 BE[13000000]                        mov esi,dword cuvant
    52                                              
    53                                              nr_lit:
    54 0000004E AC                                      lodsb
    55 0000004F 3C00                                    cmp al, 0
    56 00000051 740F                                    je ver_imp
    57                                                  
    58                                                  
    59 00000053 8B15[3A000000]                          mov edx,dword[cnt]
    60 00000059 42                                      inc edx
    61 0000005A 8915[3A000000]                          mov dword[cnt],edx
    62 00000060 EBEC                                    jmp nr_lit
    63                                              ver_imp:
    64 00000062 A1[3A000000]                            mov eax, dword [cnt] 
    65 00000067 A901000000                              test eax,01h
    66 0000006C 7502                                    jne afiseaza
    67 0000006E 7439                                    je aici
    68                                              afiseaza:
    69                                              
    70                                                  ;calculam pozitia din mijloc a cuvantului
    71 00000070 A1[3A000000]                            mov eax, dword[cnt]
    72 00000075 BA00000000                              mov edx,0
    73 0000007A BB02000000                              mov ebx,2
    74 0000007F F7F3                                    div ebx
    75                                                  ;punem spatiu pe acea pozitie
    76 00000081 C680[13000000]20                        mov byte[cuvant + eax]," "
    77                                                  ;afisam cuvantul
    78 00000088 68[13000000]                            push dword cuvant
    79 0000008D 68[36000000]                            push format_af
    80 00000092 FF15[00000000]                          call [printf]
    81 00000098 83C408                                  add esp,4 * 2
    82                                                  ;separat cu newline
    83 0000009B 68[3E000000]                            push dword newline
    84 000000A0 FF15[00000000]                          call [printf]
    85 000000A6 83C404                                  add esp,4
    86                                              aici:
    87 000000A9 61                                  popad
    88                                             
    89 000000AA E972FFFFFF                          jmp repeta
    90                                          
    91                                          afara:
    92                                              ;inchiderea fisierului
    93 000000AF FF35[0F000000]                      push dword [descriptor]
    94 000000B5 FF15[00000000]                      call [fclose]
    95 000000BB 83C404                              add esp,4
    96                                          final:
    97 000000BE 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    98 000000C0 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
