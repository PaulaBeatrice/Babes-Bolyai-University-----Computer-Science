     1                                  ; Fie un fisier -numele dat in segmentul de date- ce contine mai multe note separate prin spatiu (notele sunt de la 1 la 10). Sa se citeasca aceste 
     2                                  ; note, sa se calculeze suma si diferenta lor si sa se scrie la finalul fisierului.
     3                                  bits 32
     4                                  global start        
     5                                  
     6                                  extern exit,fopen,fclose,fscanf,fprintf             
     7                                  import exit msvcrt.dll   
     8                                  import fopen msvcrt.dll
     9                                  import fclose msvcrt.dll
    10                                  import fscanf msvcrt.dll
    11                                  import fprintf msvcrt.dll
    12                                                           
    13                                  segment data use32 class=data
    14 00000000 6E756D652E74787400          nume_fisier db "nume.txt",0
    15 00000009 FFFFFFFF                    descriptor dd -1
    16 0000000D 612B00                      mod_acces db "a+",0
    17 00000010 00000000                    nota dd 0
    18 00000014 00000000                    suma dd 0
    19 00000018 00000000                    dif dd 0
    20 0000001C 256400                      format db "%d",0
    21 0000001F 25640A00                    frm_af db "%d",10,0
    22                                      
    23                                  segment code use32 class=code
    24                                      start:
    25 00000000 68[0D000000]                    push dword mod_acces
    26 00000005 68[00000000]                    push dword nume_fisier
    27 0000000A FF15[00000000]                  call [fopen]
    28 00000010 83C408                          add esp,4*2
    29                                          
    30 00000013 A3[09000000]                    mov [descriptor],eax
    31 00000018 83F800                          cmp eax,0
    32 0000001B 0F848C000000                    je final
    33                                          
    34                                          citeste:
    35 00000021 68[10000000]                        push dword nota
    36 00000026 68[1C000000]                        push format
    37 0000002B FF35[09000000]                      push dword[descriptor]
    38 00000031 FF15[00000000]                      call [fscanf]
    39 00000037 83C40C                              add esp,4*3
    40                                              
    41 0000003A 85C0                                test eax,eax
    42 0000003C 782C                                js afara
    43                                              
    44                                              ;calc suma
    45 0000003E 8B1D[14000000]                      mov ebx,dword[suma]
    46 00000044 031D[10000000]                      add ebx,dword[nota]
    47 0000004A 891D[14000000]                      mov dword[suma],ebx
    48                                              ;calc dif
    49 00000050 A1[18000000]                        mov eax,dword[dif]
    50 00000055 BA00000000                          mov edx,0
    51 0000005A 2B05[10000000]                      sub eax,dword[nota]
    52 00000060 83DA00                              sbb edx,0
    53 00000063 A3[18000000]                        mov dword[dif],eax
    54                                              
    55                                             
    56 00000068 EBB7                                jmp citeste
    57                                         
    58                                     
    59                                          afara:
    60 0000006A FF35[14000000]                  push dword[suma]
    61 00000070 68[1F000000]                    push frm_af
    62 00000075 FF35[09000000]                  push dword[descriptor]
    63 0000007B FF15[00000000]                  call [fprintf]
    64 00000081 83C40C                          add esp,4*3
    65 00000084 FF35[18000000]                  push dword[dif]
    66 0000008A 68[1F000000]                    push frm_af
    67 0000008F FF35[09000000]                  push dword[descriptor]
    68 00000095 FF15[00000000]                  call [fprintf]
    69 0000009B 83C40C                          add esp,4*3
    70 0000009E FF35[09000000]                  push dword[descriptor]
    71 000000A4 FF15[00000000]                  call [fclose]
    72 000000AA 83C404                          add esp,4
    73                                          final:
    74 000000AD 6A00                            push    dword 0     
    75 000000AF FF15[00000000]                  call    [exit]
