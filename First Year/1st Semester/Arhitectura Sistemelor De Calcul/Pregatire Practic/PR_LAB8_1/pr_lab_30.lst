     1                                  bits 32 
     2                                  ;Se da un nume de fisier (definit in segmentul de date). 
     3                                  ;Sa se creeze un fisier cu numele dat
     4                                  ; apoi sa se citeasca de la tastatura cuvinte pana cand se citeste de la tastatura caracterul '$'.
     5                                  ; Sa se scrie in fisier doar cuvintele care contin cel putin o cifra.
     6                                  global start        
     7                                  
     8                                  extern exit,fopen,fclose,fprintf,printf,scanf  
     9                                  import exit msvcrt.dll
    10                                  import fopen msvcrt.dll
    11                                  import scanf msvcrt.dll
    12                                  import fclose msvcrt.dll
    13                                  import fprintf msvcrt.dll
    14                                  import printf msvcrt.dll
    15                                  
    16                                  segment data use32 class=data
    17 00000000 66696C652E74787400              nume_fisier db "file.txt",0
    18 00000009 7700                            mod_acces db "w",0
    19 0000000B FFFFFFFF                        descriptor dd -1
    20 0000000F 257300                          format db "%s",0
    21 00000012 25732000                        format_af db "%s ",0
    22 00000016 00<rept>                        cuvant times 32 db 0
    23 00000036 00000000                        nr_cifre dd 0
    24                                          
    25                                  segment code use32 class=code
    26                                      start:
    27 00000000 68[09000000]                    push mod_acces
    28 00000005 68[00000000]                    push nume_fisier
    29 0000000A FF15[00000000]                  call [fopen]
    30 00000010 83C408                          add ESP, 4 * 2
    31                                          
    32 00000013 A3[0B000000]                    mov [descriptor], EAX
    33                                          
    34 00000018 83F800                          cmp EAX, 0
    35 0000001B 7454                            je final
    36                                          
    37                                          read:
    38 0000001D 68[16000000]                        push dword cuvant
    39 00000022 68[0F000000]                        push format
    40 00000027 FF15[00000000]                      call [scanf]
    41 0000002D 83C408                              add ESP, 4 * 2
    42                                              
    43 00000030 B8[16000000]                        mov EAX,dword cuvant
    44                                              
    45                                              
    46 00000035 BE[16000000]                        mov esi,dword cuvant
    47 0000003A FC                                  cld
    48                                              cauta_cifre:
    49 0000003B AC                                      lodsb
    50 0000003C 3C00                                    cmp Al, 0
    51 0000003E 7420                                    je aici
    52 00000040 3C24                                    cmp AL , '$'
    53 00000042 741E                                    je afara
    54 00000044 3C30                                    cmp AL, '0'
    55 00000046 72F3                                    jb cauta_cifre
    56 00000048 3C39                                    cmp AL, '9'
    57 0000004A 77EF                                    ja cauta_cifre
    58                                                  
    59                                                  
    60                                                  
    61 0000004C 68[16000000]                            push dword cuvant
    62 00000051 FF35[0B000000]                          push dword [descriptor]
    63 00000057 FF15[00000000]                          call [fprintf]
    64 0000005D 83C408                                  add ESP, 4 * 2
    65                                                  
    66                                           
    67                                              aici:
    68 00000060 EBBB                                jmp read
    69                                          afara:
    70 00000062 FF35[0B000000]                  push dword[descriptor]
    71 00000068 FF15[00000000]                  call [fclose]
    72 0000006E 83C404                          add ESP, 4
    73                                          final:
    74 00000071 6A00                            push    dword 0      
    75 00000073 FF15[00000000]                  call    [exit]
