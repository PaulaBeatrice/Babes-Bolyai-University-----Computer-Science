     1                                  ; write a program that will read from keyboard a filename input.txt and a character c. the input file input.txt contains words separated by space. 
     2                                  ; write in the file output.txt only the words that contain the character c
     3                                  bits 32 ; assembling for the 32 bits architecture
     4                                  
     5                                  global start        
     6                                  
     7                                  extern exit, scanf, fopen, fscanf, fprintf, fclose, printf             
     8                                  import exit msvcrt.dll    
     9                                  import scanf msvcrt.dll    
    10                                  import fopen msvcrt.dll    
    11                                  import fscanf msvcrt.dll    
    12                                  import fprintf msvcrt.dll    
    13                                  import fclose msvcrt.dll    
    14                                  import printf msvcrt.dll
    15                                  
    16                                  segment data use32 class=data
    17                                  
    18 00000000 00000000                    caracter dd 0
    19 00000004 00000000                    nume_fisier dd 0
    20                                      
    21 00000008 2573000000000000            format dd "%s", 0
    22 00000010 257300                      format_c db "%s", 0
    23 00000013 7200                        mod_acces_citire db "r", 0
    24 00000015 FFFFFFFF                    descriptor_fis_1 dd -1
    25                                      
    26 00000019 6F75747075742E7478-         nume_fisier_afisare db "output.txt", 0
    26 00000022 7400               
    27 00000024 7700                        mod_acces_afisare db "w", 0
    28 00000026 FFFFFFFF                    descriptor_fis_2 dd -1
    29 0000002A 25732000                    format_afisare db "%s ",0
    30                                      
    31 0000002E 00<rept>                    cuvant times 32 db 0
    32                                  
    33                                  segment code use32 class=code
    34                                      start:
    35                                          ;citire nume fisier(input.txt)
    36 00000000 68[04000000]                    push dword nume_fisier
    37 00000005 68[08000000]                    push dword format
    38 0000000A FF15[00000000]                  call [scanf]
    39 00000010 83C408                          add ESP, 4 * 2
    40                                          
    41                                          ;deschidere input.txt
    42 00000013 68[13000000]                    push dword mod_acces_citire
    43 00000018 68[04000000]                    push dword nume_fisier
    44 0000001D FF15[00000000]                  call [fopen]
    45 00000023 83C408                          add ESP, 4 * 2
    46                                          
    47 00000026 A3[15000000]                    mov [descriptor_fis_1], EAX
    48                                          
    49 0000002B 83F800                          cmp EAX, 0
    50 0000002E 0F84AF000000                    je final
    51                                          
    52                                          ;citire c
    53 00000034 68[00000000]                    push dword caracter
    54 00000039 68[10000000]                    push dword format_c
    55 0000003E FF15[00000000]                  call [scanf]
    56 00000044 83C408                          add ESP, 4 * 2
    57                                          
    58 00000047 68[00000000]                    push dword caracter
    59 0000004C 68[10000000]                    push dword format_c
    60 00000051 FF15[00000000]                  call[printf]
    61 00000057 83C408                          add esp, 4 * 2
    62                                          
    63                                          ;deschire output.txt
    64 0000005A 68[24000000]                    push dword mod_acces_afisare
    65 0000005F 68[19000000]                    push dword nume_fisier_afisare
    66 00000064 FF15[00000000]                  call[fopen]
    67 0000006A 83C408                          add ESP, 4 * 2
    68                                          
    69 0000006D A3[26000000]                    mov [descriptor_fis_2], EAX
    70                                          
    71 00000072 83F800                          cmp EAX, 0
    72 00000075 746C                            je final
    73                                          
    74                                          ;citire cuvinte din input.txt
    75                                          citeste_cuvant:
    76                                              ;citire cuvant
    77 00000077 68[2E000000]                        push dword cuvant
    78 0000007C 68[10000000]                        push dword format_c
    79 00000081 FF35[15000000]                      push dword [descriptor_fis_1]
    80 00000087 FF15[00000000]                      call[fscanf]
    81 0000008D 83C40C                              add ESP, 4 * 3
    82                                              
    83 00000090 85C0                                test eax,eax
    84 00000092 7831                                js final_citire
    85                                              
    86                                              ;verificam daca contine litera c
    87 00000094 BE[2E000000]                        mov ESI, dword cuvant
    88                                              verif_litera:
    89                                              
    90 00000099 AC                                      lodsb; AL, primeste litera
    91 0000009A 3C00                                    cmp AL, 0
    92 0000009C 7425                                    je gata
    93 0000009E 3A05[00000000]                          cmp AL, [caracter]
    94 000000A4 751B                                    jne aici
    95                                                  
    96                                                  ;scriem  cuvantul in output.txt
    97 000000A6 68[2E000000]                            push dword cuvant 
    98 000000AB 68[2A000000]                            push dword format_afisare
    99 000000B0 FF35[26000000]                          push dword [descriptor_fis_2]
   100 000000B6 FF15[00000000]                          call[fprintf]
   101 000000BC 83C408                                  add ESP, 4 * 2
   102 000000BF EBB6                                    jmp citeste_cuvant
   103                                                  
   104                                                  aici:
   105 000000C1 EBD6                                    jmp verif_litera
   106                                              gata:
   107                                              
   108 000000C3 EBB2                                jmp citeste_cuvant
   109                                          
   110                                          final_citire:
   111                                              
   112                                          ;inchidem input.txt
   113 000000C5 FF35[15000000]                  push dword [descriptor_fis_1]
   114 000000CB FF15[00000000]                  call[fclose]
   115 000000D1 83C404                          add ESP, 4
   116                                          
   117                                          ;inchidem output.txt
   118 000000D4 FF35[26000000]                  push dword [descriptor_fis_2]
   119 000000DA FF15[00000000]                  call[fclose]
   120 000000E0 83C404                          add ESP, 4
   121                                          
   122                                          final:
   123                                  
   124 000000E3 6A00                            push    dword 0
   125 000000E5 FF15[00000000]                  call    [exit]      
