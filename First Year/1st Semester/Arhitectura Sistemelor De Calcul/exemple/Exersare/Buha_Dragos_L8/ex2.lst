     1                                  bits 32 
     2                                  global start        
     3                                  
     4                                  
     5                                  extern exit, fopen, fclose, fread, printf              
     6                                  import exit msvcrt.dll    
     7                                  import fopen msvcrt.dll
     8                                  import fclose msvcrt.dll
     9                                  import fread msvcrt.dll
    10                                  import printf msvcrt.dll
    11                                  
    12                                  segment data use32 class=data
    13 00000000 696E7075742E747874-         nume_fisier db "input.txt", 0   
    13 00000009 00                 
    14 0000000A 7200                        mod_acces db "r", 0
    15 0000000C FFFFFFFF                    descriptor_fisier dd -1
    16 00000010 00000000                    nr_caractere_citite dd 0
    17                                      len equ 100
    18 00000014 <res 00000065>              buffer resb (len+1) 
    19 00000079 6263646667686A6B6C-         consoane db "bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ",0
    19 00000082 6D6E70717273747677-
    19 0000008B 78797A424344464748-
    19 00000094 4A4B4C4D4E50515253-
    19 0000009D 54565758595A00     
    20 000000A4 00000000                    nr_consoane dd 0
    21 000000A8 256400                      format_afis db "%d", 0
    22 000000AB 4E756D6172756C2064-         text db "Numarul de consoane este: ", 0  ; mesajul afisat pe ecran
    22 000000B4 6520636F6E736F616E-
    22 000000BD 6520657374653A2000 
    23 000000C6 256400                      format db "%d", 0
    24                                  
    25                                  ; Se da un fisier text. Sa se citeasca continutul fisierului, sa se contorizeze numarul de consoane si sa se afiseze aceasta valoare. Numele fisierului text este definit in segmentul de date.
    26                                  segment code use32 class=code
    27                                      start:
    28                                          ;deschidem fisierul 
    29 00000000 68[0A000000]                    push dword mod_acces
    30 00000005 68[00000000]                    push dword nume_fisier
    31 0000000A FF15[00000000]                  call [fopen]
    32 00000010 83C408                          add esp, 4*2 
    33                                          
    34 00000013 83F800                          cmp eax, 0   ;daca nu exista fisierul iesim
    35 00000016 0F8483000000                    je final
    36                                          
    37 0000001C A3[0C000000]                    mov [descriptor_fisier],eax 
    38                                          
    39                                          
    40                                          ;citim cate 100 caractere din fisier pana cand citim tot fiserul
    41                                          citire:
    42 00000021 FF35[0C000000]                      push dword [descriptor_fisier]
    43 00000027 6A64                                push dword len
    44 00000029 6A01                                push dword 1
    45 0000002B 68[14000000]                        push dword buffer
    46 00000030 FF15[00000000]                      call [fread]
    47 00000036 83C410                              add esp, 4*4
    48                                              
    49 00000039 83F800                              cmp eax, 0   ;daca nu am mai citit nimic iesim 
    50 0000003C 7430                                je afisare
    51                                              
    52                                              ;mov [nr_caractere_citite],eax 
    53                                              
    54 0000003E 89C1                                mov ecx, eax 
    55 00000040 BE[14000000]                        mov esi, buffer
    56                                              repeta:            ;parcurgem textul citit caracter cu caracter 
    57                                                 ; mov al, [buffer+esi]
    58 00000045 AC                                     lodsb
    59 00000046 89CA                                    mov edx, ecx   ;salvam ecx 
    60 00000048 B92A000000                              mov ecx, 42  ;42-> lungimea vectorului de consoane 
    61 0000004D BD00000000                              mov ebp, 0   ;ebp parcurge consoanele 
    62                                                  cauta:         ;cautam caracterul in vectorul de consoane 
    63 00000052 8A9D[79000000]                              mov bl, [consoane+ebp]
    64 00000058 38D8                                        cmp al, bl 
    65 0000005A 7407                                        je Consoana   ;daca e consoana adunam 1
    66 0000005C 45                                          inc ebp 
    67 0000005D E2F3                                        loop cauta 
    68                                                  
    69 0000005F 89D1                                    mov ecx, edx 
    70 00000061 EB07                                    jmp Vocala
    71                                                  Consoana:
    72 00000063 8305[A4000000]01                        add dword[nr_consoane], 1 
    73                                                  
    74                                                  Vocala:
    75                                                  ;inc esi
    76 0000006A E2D9                                    loop repeta
    77                                          
    78 0000006C EBB3                                jmp citire 
    79                                          
    80                                          
    81                                          ;inchidem fisierul si afisam nr de consoane 
    82                                          afisare:
    83                                           ; afisez pe ecran mesajul "Numarul de consoane este: "
    84                                          ;printf("Numarul de consoane este: ")
    85 0000006E 68[AB000000]                    push dword text
    86 00000073 FF15[00000000]                  call [printf]; apelam functia printf
    87 00000079 83C404                          add ESP, 4 * 1; eliberam parametrii de pe stiva; 4 = dimensiunea unui dword; 1 = nr de parametrii
    88 0000007C FF35[0C000000]                      push dword [descriptor_fisier]
    89 00000082 FF15[00000000]                      call [fclose]
    90 00000088 83C404                              add esp, 4*1
    91                                              
    92 0000008B FF35[A4000000]                      push dword [nr_consoane]
    93 00000091 68[A8000000]                        push dword format_afis
    94 00000096 FF15[00000000]                      call [printf]
    95 0000009C 83C408                              add esp, 4*2
    96                                          
    97                                          final:
    98                                          ; exit(0)
    99 0000009F 6A00                            push    dword 0      
   100 000000A1 FF15[00000000]                  call    [exit]       
