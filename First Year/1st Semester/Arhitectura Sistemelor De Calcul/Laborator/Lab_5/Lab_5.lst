     1                                  ;Se da un sir de caractere format din litere mici.
     2                                  ;Sa se transforme acest sir in sirul literelor mari corespunzator.
     3                                  bits 32 
     4                                  global start        
     5                                  extern exit,printf ; tell nasm that exit exists even if we won't be defining it
     6                                  import exit msvcrt.dll ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
     9                                  ; our data is declared here (the variables needed by our program)
    10                                  segment data use32 class=data
    11 00000000 6162636D6E              	s db 'a', 'b', 'c', 'm','n' ; declararea sirului initial s
    12                                  	lung equ $-s ; stabilirea lungimea sirului initial l ; l=5
    13 00000005 00<rept>                	d times lung db 0 ; rezervarea unui spatiu de dimensiune l pentru sirul destinatie d si initializarea acestuia
    14                                  
    15                                  segment code use32 class=code
    16                                  start:
    17                                  
    18 00000000 B904000000              	mov ecx, lung - 1 ;punem lungimea - 1 in ECX pentru a putea realiza bucla loop de ECX - 1 ori
    19 00000005 BE00000000              	mov esi, 0    
    20                                   
    21 0000000A E313                    	jecxz Sfarsit  
    22                                      
    23                                  	Repeta:
    24 0000000C 8A86[00000000]          		mov AL, [s+esi] ;s+0=primul, s+1=al doilea, 
    25                                  ;cu cuvinte: s+0 =primul, s+2=al doilea, …
    26                                  ; cu dublucuv: s+0=primul, s+4=al doilea, ...
    27 00000012 B320                    		mov BL, 'a'-'A' ;61h-41h=20h ; pentru a obtine litera mare corespunzatoare literei mici, vom scadea din codul ASCII 
    28                                  		; al literei mici diferenta dintre 'a'-'A'
    29 00000014 28D8                    		sub AL, BL  ; ‘A’, ‘B’           
    30 00000016 8886[05000000]          		mov [d+esi], AL    
    31 0000001C 46                      		inc esi
    32 0000001D E2ED                    	loop Repeta ; ECX=4
    33                                  
    34                                  	Sfarsit:           ;terminarea programului
    35 0000001F B800000000              mov EAX,0
    36                                  
    37 00000024 FF15[00000000]          call [printf]
    38                                  	; exit(0)
    39 0000002A 6A00                    	push dword 0 ; push the parameter for exit onto the stack
    40 0000002C FF15[00000000]          	call [exit] ; call exit to terminate the program
